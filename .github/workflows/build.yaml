# See   https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
#       https://docs.github.com/en/actions/reference/environment-variables
#       https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
#
# This is pretty light, just illustrates

name: build


on:
  pull_request:
    branches:
    - main
    paths:
    - app/**
    - charts/**
  push:
    branches:
    - main
    paths:
    - app/**
    - charts/**


jobs:
  check-helm-chart:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Helm
      uses: azure/setup-helm@v1                         # See https://github.com/Azure/setup-helm

    - name: Helm lint
      run: |
        helm lint charts/ktsg-argocd-demo

    - name: Template prod Helm chart content
      run: |
        mkdir generated-yaml
        helm template -n demo charts/ktsg-argocd-demo/ -f charts/ktsg-argocd-demo/values-prod.yaml > generated-yaml/all.yaml

    - name: Lint with kube-linter
      uses: stackrox/kube-linter-action@v1.0.2          # See https://github.com/stackrox/kube-linter-action
      with:
        directory: generated-yaml

  build-and-test-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - id: buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1               # See https://github.com/docker/build-push-action

    - name: Build image
      uses: docker/build-push-action@v2                 # See https://github.com/docker/build-push-action, have no caching here at this time
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: ./app/
        load: true                                      # See load at https://github.com/marketplace/actions/build-and-push-docker-images
        push: false
        tags: ${{ github.repository }}:test

    - name: Test image
      run: |
        docker container run --detach --name test -p 5000:5000 ${{ github.repository }}:test
        curl -v localhost:5000/
        docker container rm --force test
